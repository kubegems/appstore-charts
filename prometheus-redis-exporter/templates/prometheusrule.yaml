{{- if .Values.alerts.enabled -}}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  creationTimestamp: null
  labels:
    prometheusrule.kubegems.io/name: {{ template "prometheus-redis-exporter.fullname" . }}
    prometheusrule.kubegems.io/type: monitor
  name: {{ template "prometheus-redis-exporter.fullname" . }}
  namespace: {{ .Release.Namespace }}
spec:
  groups:
  - name: RedisDown
    rules:
    - alert: RedisDown
      annotations:
        message: Redis [namespace {{"{{"}} $labels.namespace }}] [service {{"{{"}} $labels.service
          }}] [instance {{"{{"}} $labels.instance }}] down
        value: '{{"{{"}} $value | printf "%.1f" }}'
      expr: redis_up{service="{{ template "prometheus-redis-exporter.fullname" . }}",namespace="{{ .Release.Namespace }}"}==0
      for: 0m
      labels:
        gems_alert_from: monitor
        gems_alert_scope: normal
        gems_alertname: RedisDown
        gems_namespace: {{ .Release.Namespace }}
        severity: critical
  - name: RedisMemoryHigh
    rules:
    - alert: RedisMemoryHigh
      annotations:
        message: Redis [namespace {{"{{"}} $labels.namespace }}] [service {{"{{"}} $labels.service
          }}] [instance {{"{{"}} $labels.instance }}] is using too much memory
        value: '{{"{{"}} $value | printf "%.1f" }}'
      expr: redis_memory_used_bytes{service="{{ template "prometheus-redis-exporter.fullname" . }}",namespace="{{ .Release.Namespace }}"}
        / redis_memory_max_bytes{service="{{ template "prometheus-redis-exporter.fullname" . }}", namespace="{{ .Release.Namespace }}"}
        * 100>90
      for: 2m
      labels:
        gems_alert_from: monitor
        gems_alert_scope: normal
        gems_alertname: RedisMemoryHigh
        gems_namespace: {{ .Release.Namespace }}
        severity: error
  - name: RedisTooManyConnections
    rules:
    - alert: RedisTooManyConnections
      annotations:
        message: Redis too many connections [namespace {{"{{"}} $labels.namespace }}] [service
          {{"{{"}} $labels.service }}] [instance {{"{{"}} $labels.instance }}]
        value: '{{"{{"}} $value | printf "%.1f" }}'
      expr: redis_connected_clients{service="{{ template "prometheus-redis-exporter.fullname" . }}",namespace="{{ .Release.Namespace }}"}
        / redis_config_maxclients{service="{{ template "prometheus-redis-exporter.fullname" . }}",namespace="{{ .Release.Namespace }}"}
        * 100>60
      for: 5m
      labels:
        gems_alert_from: monitor
        gems_alert_scope: normal
        gems_alertname: RedisTooManyConnections
        gems_namespace: {{ .Release.Namespace }}
        severity: error
  - name: RedisRejectedConnections
    rules:
    - alert: RedisRejectedConnections
      annotations:
        message: MySQL [namespace {{"{{"}} $labels.namespace }}] [service {{"{{"}} $labels.service
          }}] [instance {{"{{"}} $labels.instance }}] restarted
        value: '{{"{{"}} $value | printf "%.1f" }}'
      expr: increase(redis_rejected_connections_total{service="{{ template "prometheus-redis-exporter.fullname" . }}",namespace="{{ .Release.Namespace }}"}[1m])>0
      for: 0m
      labels:
        gems_alert_from: monitor
        gems_alert_scope: normal
        gems_alertname: RedisRejectedConnections
        gems_namespace: {{ .Release.Namespace }}
        severity: error
{{- end }}