# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - "main"
      - "develop"
    # Publish semver tags as releases.
    tags: ["v*.*.*"]
    paths-ignore:
      - "config/**"
      - "**/*.md"
  pull_request:
    branches:
      - "main"
      - "release-*"
    paths-ignore:
      - "config/**"
      - "**/*.md"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ${{ secrets.DOCKER_RSY }}
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v1
        id: buildx

      - name: Log into registry ${{ env.DOCKER_RSY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.DOCKER_RSY }}
          username: ${{ secrets.DOCKER_RSY_USER }}
          password: ${{ secrets.DOCKER_RSY_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3.6.2
        with:
          images: ${{ env.IMAGE_NAME }}

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Installer Helm v3 and Kubectl
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          wget -q https://dl.k8s.io/release/v1.23.0/bin/linux/amd64/kubectl
          chmod +x ./kubectl

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.2.0
        with:
          cluster_name: kubegems-installer-test
          node_image: kindest/node:v1.23.13

      - name: Install required crds
        run: |
          kubectl apply -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.56.2/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml
          kubectl apply -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.56.2/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagerconfigs.yaml
          kubectl apply -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.56.2/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml

      - name: Helm Resource Dry Run
        run: |
          make dry-run

      - name: Build Helm Package
        run: |
          make package

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v2.9.0
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Create Chartmuseum Service
        run: |
          make init-chartmuseum
          sleep 60

      - name: Apply Charts job
        run: |
          kubectl create job appstore-charts -n default --image=${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}
          sleep 60

      - name: Job Logs
        run: |
          kubectl get pod -n default |grep charts |awk '{print $1}' | xargs kubectl logs -n default
